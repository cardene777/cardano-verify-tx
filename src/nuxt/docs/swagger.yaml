openapi: 3.0.3
info:
  title: Merkle Commit Service
  version: 1.0.0
  description: |
    API group that  

    1. **/api/merkleRoot** – builds a Merkle tree for freshly‑created  
       transactions, commits the root on Cardano *Preprod* and stores all proofs.  
    2. **/api/verifyTxHash** – verifies one or many transaction IDs against their
       on‑chain Merkle root.

servers:
  - url: http://localhost:3000
    description: Local development server

tags:
  - name: merkle
    description: Merkle‑tree related operations (commit & verification)

paths:
  /api/merkleRoot:
    post:
      tags: [merkle]
      summary: Build & commit a Merkle tree for un‑committed transactions
      operationId: postMerkleProcess
      description: |
        * Scans the DB for `Transaction` rows whose **created_at** lies **after**
          the last commit’s **periodEnd** (or 30 days back if none exist).  
        * Builds a sorted SHA‑256 Merkle tree, sends the root on‑chain
          (Cardano Preprod) as transaction metadata, waits **≤ 15 min** for
          confirmation, then records:  
          &nbsp;&nbsp;• **MerkleCommit** row  
          &nbsp;&nbsp;• updates each `Transaction.commitId`  
          &nbsp;&nbsp;• bulk‑inserts **MerkleProof** rows in chunks of 1 000.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              description: An empty JSON object (ignored)
      responses:
        "200":
          description: Processing finished successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
        "504":
          description: Transaction took longer than 15 minutes to confirm
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"

  /api/verifyTxHash:
    post:
      tags: [merkle]
      summary: Verify that one or more txIds are included in their Merkle root
      operationId: postVerifyTxHash
      description: |
        Accepts an array of Cardano **transaction IDs** (`txIds`) and checks each
        of them against the corresponding on‑chain Merkle root.  
        The endpoint returns a per‑ID result indicating whether the tx is proven.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [txIds]
              properties:
                txIds:
                  type: array
                  description: One or more Cardano transaction IDs (lower‑case hex)
                  items:
                    type: string
                    pattern: "^[0-9a-f]{64}$"
                  example:
                    - cma89p5zd03avpi0jcu0bcalz0000000000000000000000000000000000000000
                    - cma89p66u0ipkpi0jyi6fw1mj0000000000000000000000000000000000000000
      responses:
        "200":
          description: Verification completed (each element may succeed or fail)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifySuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

components:
  schemas:
    # ── /api/merkleRoot success ────────────────────────────────
    ProcessSuccess:
      type: object
      required: [ok, message]
      properties:
        ok:
          type: boolean
          example: true
        message:
          type: string
          example: MerkleCommit 作成＆オンチェーン＆証明保存完了

    # ── /api/verifyTxHash success ─────────────────────────────────
    VerifyResult:
      type: object
      required: [txId, ok, message]
      properties:
        txId:
          type: string
          description: Transaction ID that was checked
          example: cma89p5zd03avpi0jcu0bcalz0000000000000000000000000000000000000000
        ok:
          type: boolean
          description: True if the verification process itself succeeded
          example: true
        merkleRoot:
          type: string
          description: Hex‑encoded Merkle root used for comparison
          example: a95d7e43b25f66106cf51bbd7e92b458bda4ac82cfa95276eb73d0070e8579c8
        included:
          type: boolean
          description: Whether the txId is actually contained in the Merkle tree
          example: true
        message:
          type: string
          example: ✅ トランザクションは Merkle ルートに含まれています
        error:
          type: string
          description: Present only if `ok` is false

    VerifySuccess:
      type: object
      required: [ok, results]
      properties:
        ok:
          type: boolean
          example: true
        results:
          type: array
          items:
            $ref: "#/components/schemas/VerifyResult"

    # ── shared error object ───────────────────────────────────────
    ErrorObject:
      type: object
      required: [ok, error]
      properties:
        ok:
          type: boolean
          example: false
        error:
          type: string
          description: Human‑readable error description
          example: BLOCKFROST_PROJECT_ID が設定されていません

  # ── reusable error responses ────────────────────────────────────
  responses:
    BadRequest:
      description: The request was malformed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorObject"
    InternalError:
      description: Unexpected server‑side failure
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorObject"
